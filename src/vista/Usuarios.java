/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import dao.UsuarioDao;
import dao.VeterinarioDao;
import dao.impl.UsuarioDaoImpl;
import dao.impl.VeterinarioDaoImpl;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;
import modelo.Veterinario;

/**
 *
 * @author Miguel Casa
 */
public class Usuarios extends javax.swing.JInternalFrame {

    Integer id = 0;
    String usu = "";
    Usuario usuario = new Usuario();
    UsuarioDao usuarioDAO = new UsuarioDaoImpl();
    VeterinarioDao veterinarioDAO = new VeterinarioDaoImpl();
    DefaultTableModel modeloTable =  new DefaultTableModel();
    /**
     * Creates new form Usuario
     */
    public Usuarios() {
        initComponents();
        this.listarUsuario();
        this.cboVeterinario();
        this.seleccionarVet();
        this.buscarUsuario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtUsuario = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtVeterinario = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        cboVet = new javax.swing.JComboBox<>();
        txtContra = new javax.swing.JTextField();
        jchkId = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsu = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtbuscador = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        setClosable(true);
        setIconifiable(true);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(txtUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 230, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Correo");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 90, -1, -1));

        txtVeterinario.setEditable(false);
        txtVeterinario.setEnabled(false);
        jPanel2.add(txtVeterinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 200, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Contraseña");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Usuario");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, -1, -1));
        jPanel2.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 230, -1));

        cboVet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cboVet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboVetActionPerformed(evt);
            }
        });
        jPanel2.add(cboVet, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 51, -1));
        jPanel2.add(txtContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 200, -1));

        jchkId.setText("No tengo ID de veterinario");
        jchkId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkIdActionPerformed(evt);
            }
        });
        jPanel2.add(jchkId, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("ID");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Veterinario");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        btnGuardar.setText("GUARDAR");
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel2.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 92, -1));

        btnModificar.setText("MODIFICAR");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel2.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 140, -1, -1));

        btnEliminar.setText("ELIMINAR");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel2.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 95, -1));

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel2.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 140, 96, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaUsu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID ", "USUARIO", "CONTRASEÑA", "CORREO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaUsu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUsu);
        if (tablaUsu.getColumnModel().getColumnCount() > 0) {
            tablaUsu.getColumnModel().getColumn(0).setResizable(false);
            tablaUsu.getColumnModel().getColumn(1).setResizable(false);
            tablaUsu.getColumnModel().getColumn(1).setPreferredWidth(150);
            tablaUsu.getColumnModel().getColumn(2).setResizable(false);
            tablaUsu.getColumnModel().getColumn(2).setPreferredWidth(150);
            tablaUsu.getColumnModel().getColumn(3).setResizable(false);
            tablaUsu.getColumnModel().getColumn(3).setPreferredWidth(200);
        }

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 105, 600, 170));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Buscador");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));
        jPanel3.add(txtbuscador, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 170, -1));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("CRUD USUARIOS");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 141, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 646, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listarUsuario(){
        List<Usuario> listarUsuario = usuarioDAO.listarUsuario();
        modeloTable = (DefaultTableModel)tablaUsu.getModel();
        Object[] object = new Object[4];

        for(Usuario usu :listarUsuario){
            object[0]= usu.getId_vet();
            object[1]= usu.getUsuario();
            object[2]= usu.getPassword();
            object[3]= usu.getCorreo();
            modeloTable.addRow(object);
        }
        tablaUsu.setModel(modeloTable);
        tablaUsu.revalidate();
        
    }
    
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (!"".equals(txtUsuario.getText())  && !"".equals(txtContra.getText())  && !"". equals(txtCorreo.getText())){
        
            usuario.setId_vet(this.id);
            usuario.setUsuario(txtUsuario.getText());
            usuario.setPassword(txtContra.getText());
            usuario.setCorreo(txtCorreo.getText());
            
            if(this.verificarUsuario()){
                if(this.verificarVeterinario()){
                    if(  usuarioDAO.registrarUsuario(usuario)){
                    this.limpiarCajas();
                    this.limpiarTabla();
                    this.listarUsuario();
                    JOptionPane.showMessageDialog(this, "Se registro correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);

                    }else {
                        JOptionPane.showMessageDialog(this, "Usuario ya registrado", "Usuario Existente",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Faltan datos a llenar", "Datos faltantes",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        if (!"".equals(txtUsuario.getText())  && !"".equals(txtContra.getText())  && !"". equals(txtCorreo.getText())){
            if(this.vereficarDatosUsu()){
                usuario.setUsuario(txtUsuario.getText());
                usuario.setPassword(txtContra.getText());
                usuario.setCorreo(txtCorreo.getText());

                if( usuarioDAO.modificarUsuario(usuario , this.usu)){
                    this.limpiarCajas();
                    this.limpiarTabla();
                    this.listarUsuario();

                    JOptionPane.showMessageDialog(this, "Se edito correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);

                }else {
                    JOptionPane.showMessageDialog(this, "Nombre de usuario ya existente   ", "ERROR",JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Faltan datos a llenar", "Datos faltantes",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if(!"".equals(txtUsuario.getText())){
            if(this.vereficarDatosUsu()){
                int option = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que deseas eliminar el usuario: "+ txtUsuario.getText() +" ?", "Confirmación", JOptionPane.YES_NO_OPTION);
                if (option ==  JOptionPane.YES_OPTION){
                    if( usuarioDAO.eliminarUsuario(txtUsuario.getText())){
                        JOptionPane.showMessageDialog(this, "Se elimino correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);
                        this.id = 0;
                        this.limpiarCajas();
                        this.limpiarTabla();
                        this.listarUsuario();
                    }else {
                        JOptionPane.showMessageDialog(this, "Error al eliminar Usuario   ", "ERROR",JOptionPane.ERROR_MESSAGE);

                    }
                } else{
                    this.limpiarCajas();
                }
            }
        }else {
            JOptionPane.showMessageDialog(this, "No hay usuario seleccionado", "Seleccione de la tabla",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        this.limpiarCajas();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tablaUsuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuMouseClicked
        // TODO add your handling code here:
        int fila = tablaUsu.rowAtPoint(evt.getPoint());
        String id = tablaUsu.getValueAt(fila, 0).toString();
        this.usu = tablaUsu.getValueAt(fila, 1).toString();
        String contra = tablaUsu.getValueAt(fila, 2).toString();
        String correo = tablaUsu.getValueAt(fila,3).toString();
        
        if(id.equals("0")){
            txtVeterinario.setText("");
        } else{
            cboVet.setSelectedItem(id);
            this.seleccionarVet();
        }
        txtUsuario.setText(usu);
        txtContra.setText(contra);
        txtCorreo.setText(correo);
    }//GEN-LAST:event_tablaUsuMouseClicked

    private void cboVetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboVetActionPerformed
        // TODO add your handling code here:
        this.seleccionarVet();
        this.limpiarCajas();
    }//GEN-LAST:event_cboVetActionPerformed

    private void jchkIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkIdActionPerformed
        // TODO add your handling code here:
        if (jchkId.isSelected()) {
            txtVeterinario.setText("");
            cboVet.removeAllItems();
            this.id =null;
        } else {
            this.cboVeterinario();
            this.seleccionarVet();
            this.id = Integer.valueOf(cboVet.getSelectedItem().toString());
        }
    }//GEN-LAST:event_jchkIdActionPerformed

    private  void cboVeterinario(){
            DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>();
            List<Veterinario> listarVeterinario = veterinarioDAO.listarVeterinario();
            Object[] object = new Object[2];
            
            for(Veterinario vet :listarVeterinario){
                object[0]= vet.getId();
                object[1]= vet.getNombre();
                comboBoxModel.addElement(object[0].toString());
            }
            cboVet.setModel(comboBoxModel);
    }
    
    private void limpiarTabla(){
            modeloTable = (DefaultTableModel) tablaUsu.getModel();
            modeloTable.setRowCount(0);
            tablaUsu.revalidate();
    }
    
    private void limpiarCajas(){
            this.usu = "";
            txtUsuario.setText("");
            txtContra.setText("");
            txtCorreo.setText("");
    }
    
    private void seleccionarVet(){
        if(cboVet.getItemCount() != 0){
            String Veterinario = usuarioDAO.SeleccionarVet(cboVet.getSelectedItem().toString());
            this.id = Integer.valueOf(cboVet.getSelectedItem().toString());
            txtVeterinario.setText(Veterinario);
        }
    }

    private boolean verificarUsuario(){
        int rowCount = tablaUsu.getRowCount();
    
        for (int i = 0; i < rowCount; i++) {
            Object value = tablaUsu.getValueAt(i, 1);
            Object value2 = tablaUsu.getValueAt(i, 3);

            if (txtUsuario.getText().equals(value)) {
                JOptionPane.showMessageDialog(this, "Usuario ya registrado", "Usuario Existente",JOptionPane.ERROR_MESSAGE);
                return false;
            }
            if (txtCorreo.getText().equals(value2)) {
                JOptionPane.showMessageDialog(this, "Correo ya registrado", "Correo Usado",JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        return true;
    }
    
    private boolean vereficarDatosUsu(){
        int rowCount = tablaUsu.getRowCount();
    
        for (int i = 0; i < rowCount; i++) {
            Object value = tablaUsu.getValueAt(i, 1);
            Object value2 = tablaUsu.getValueAt(i, 2);
            Object value3 = tablaUsu.getValueAt(i, 3);
            

            if (txtUsuario.getText().equals(value)&& txtContra.getText().equals(value2) && txtCorreo.getText().equals(value3)) {
                return true;
            }
        }
        JOptionPane.showMessageDialog(this, "No hay usuario registrado con esos datos", "Usuario no encontrado",JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    private boolean verificarVeterinario(){
        int rowCount = tablaUsu.getRowCount();
    
        for (int i = 0; i < rowCount; i++) {
            Object value = tablaUsu.getValueAt(i, 0);
            String valueStr = String.valueOf(value);
            
            if(cboVet.getItemCount() != 0){
                if (cboVet.getSelectedItem().equals(valueStr)) {
                    JOptionPane.showMessageDialog(this, "Veterinario ya registrado", "Cuenta Existente",JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            }
        }
        
        return true;
    }
    
    public void iniciarbusqueda(){
        if (!"".equals(txtbuscador.getText())){
            this.limpiarTabla();
            List<Usuario> listarUsuario = usuarioDAO.buscarUsuario(txtbuscador.getText());
            modeloTable = (DefaultTableModel)tablaUsu.getModel();
            Object[] object = new Object[7];

            for(Usuario usu :listarUsuario){
                object[0]= usu.getId_vet();
                object[1]= usu.getUsuario();
                object[2]= usu.getPassword();
                object[3]= usu.getCorreo();
                modeloTable.addRow(object);
            }
            tablaUsu.setModel(modeloTable);
            tablaUsu.revalidate();
        } else{
            this.limpiarTabla();
            this.listarUsuario();
        }
    }
    
    private void buscarUsuario(){
        txtbuscador.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                iniciarbusqueda();
                System.out.println("Texto insertado: " + txtbuscador.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                iniciarbusqueda();
                System.out.println("Texto eliminado: " + txtbuscador.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cboVet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox jchkId;
    private javax.swing.JTable tablaUsu;
    private javax.swing.JTextField txtContra;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextField txtVeterinario;
    private javax.swing.JTextField txtbuscador;
    // End of variables declaration//GEN-END:variables
}
