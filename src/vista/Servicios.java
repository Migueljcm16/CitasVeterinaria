/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import dao.ServicioDao;
import dao.impl.ServicioDaoImpl;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Servicio;

/**
 *
 * @author Miguel Casa
 */
public class Servicios extends javax.swing.JInternalFrame {

    Servicio servicio = new Servicio();
    ServicioDao servicioDAO = new ServicioDaoImpl();
    DefaultTableModel modeloTable =  new DefaultTableModel();
    Map<Integer, Integer> idSevMap = new HashMap<>();
    int id = 0;
    /**
     * Creates new form Servicios
     */
    public Servicios() {
        initComponents();
        this.listarServicio();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaSer = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        txtServicio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnregister = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        btnlimpiar = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaSer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SERVICIO", "PRECIO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaSer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaSerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaSer);
        if (tablaSer.getColumnModel().getColumnCount() > 0) {
            tablaSer.getColumnModel().getColumn(0).setResizable(false);
            tablaSer.getColumnModel().getColumn(0).setPreferredWidth(130);
            tablaSer.getColumnModel().getColumn(1).setResizable(false);
            tablaSer.getColumnModel().getColumn(1).setPreferredWidth(20);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 26, 260, 290));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("CRUD SERVICIOS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Servicio:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Precio:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));
        jPanel1.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 140, -1));
        jPanel1.add(txtServicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 140, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        txtId.setEditable(false);
        txtId.setEnabled(false);
        jPanel1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 50, -1));

        btnregister.setText("GUARDAR");
        btnregister.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnregister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregisterActionPerformed(evt);
            }
        });
        jPanel1.add(btnregister, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 90, -1));

        btnmodificar.setText("MODIFICAR");
        btnmodificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnmodificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, -1));

        btnlimpiar.setText("LIMPIAR");
        btnlimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnlimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 80, -1));

        btneliminar.setText("ELIMINAR");
        btneliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btneliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private  void listarServicio(){
            List<Servicio> listarServicio = servicioDAO.listarServicios();
            modeloTable = (DefaultTableModel)tablaSer.getModel();
            Object[] object = new Object[2];
            int i = 0;
            
            for(Servicio ser :listarServicio){
                object[0]= ser.getTipo();
                object[1]= ser.getPrecio();
                modeloTable.addRow(object);
                
                idSevMap.put(i, ser.getId());
                i++;
            }
            tablaSer.setModel(modeloTable);
            tablaSer.revalidate();
    }
    
    private void btnregisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregisterActionPerformed
        // TODO add your handling code here:
        if(this.id == 0){
            if (!"".equals(txtServicio.getText())  && !"".equals(txtPrecio.getText())){

                servicio.setTipo(txtServicio.getText());
                servicio.setPrecio(Integer.parseInt(txtPrecio.getText()));

                if(this.verificarServicio()){
                    if( servicioDAO.registrarServicio(servicio)){
                        this.limpiarCajas();
                        this.limpiarTabla();
                        this.listarServicio();
                        JOptionPane.showMessageDialog(this, "Se registro correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);

                    }else {
                        JOptionPane.showMessageDialog(this, "Error al registrar Servicio", "ERROR",JOptionPane.ERROR_MESSAGE);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Faltan datos a llenar", "Datos faltantes",JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(this, "Tiene un servicio seleccionado, para registrar uno nuevo limpie las cajas", "Servicio seleccionado",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnregisterActionPerformed

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        // TODO add your handling code here:
        if(this.id != 0){
           if (!"".equals(txtServicio.getText())  && !"".equals(txtPrecio.getText())){

                servicio.setTipo(txtServicio.getText());
                servicio.setPrecio(Integer.parseInt(txtPrecio.getText()));
                servicio.setId(id);

                if( servicioDAO.modificarServicio(servicio)){
                    this.limpiarCajas();
                    this.limpiarTabla();
                    this.listarServicio();

                    JOptionPane.showMessageDialog(this, "Se edito correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);

                }else {
                    JOptionPane.showMessageDialog(this, "No puede editar este servicio porque hay una o m√°s citas pendientes, \nsolo podra editar el precio pero aplicara a las futuras citas registradas", "Citas pendientes ",JOptionPane.ERROR_MESSAGE);

                };
            } else {
                JOptionPane.showMessageDialog(this, "Faltan datos a llenar", "Datos faltantes",JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(this, "No hay servicio seleccionado", "Seleccione de la tabla",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnmodificarActionPerformed

    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        this.limpiarCajas();
    }//GEN-LAST:event_btnlimpiarActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        if(this.id != 0){
            int option = JOptionPane.showConfirmDialog(null, "¬øEst√°s seguro de que deseas eliminar el servicio?", "Confirmaci√≥n", JOptionPane.YES_NO_OPTION);
            if (option ==  JOptionPane.YES_OPTION){
                if( servicioDAO.eliminarServicio(this.id)){
                    JOptionPane.showMessageDialog(this, "Se elimino correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);
                    this.id = 0;
                    this.limpiarCajas();
                    this.limpiarTabla();
                    this.listarServicio();
                }else {
                    JOptionPane.showMessageDialog(this, "No puede eliminar este servicio porque hay una o m√°s citas pendientes", "Citas pendientes",JOptionPane.ERROR_MESSAGE);

                }
            } else{
                this.limpiarCajas();
            }
        }else {
            JOptionPane.showMessageDialog(this, "No hay servicio seleccionado", "Seleccione de la tabla",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btneliminarActionPerformed

    private void tablaSerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaSerMouseClicked
        // TODO add your handling code here:
        int fila = tablaSer.rowAtPoint(evt.getPoint());
        String servicios = tablaSer.getValueAt(fila, 0).toString();
        String precio = tablaSer.getValueAt(fila, 1).toString();
        
        this.id = idSevMap.get(fila);
        txtServicio.setText(servicios);
        txtPrecio.setText(precio);
        txtId.setText(Integer.toString(id));
    }//GEN-LAST:event_tablaSerMouseClicked

    private boolean verificarServicio(){
        int rowCount = tablaSer.getRowCount();
    
        for (int i = 0; i < rowCount; i++) {
            Object value = tablaSer.getValueAt(i, 0);

            if (txtServicio.getText().equals(value)) {
                JOptionPane.showMessageDialog(this, "Servicio ya registrado", "Servicio Existente",JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        return true;
    }
    
    private void limpiarTabla(){
            modeloTable = (DefaultTableModel) tablaSer.getModel();
            modeloTable.setRowCount(0);
            tablaSer.revalidate();
    }
    
    private void limpiarCajas(){
        
        int selectedRow = tablaSer.getSelectedRow();

        if (selectedRow != -1) {
            tablaSer.clearSelection();
        }
        txtId.setText("");
        txtServicio.setText("");
        txtPrecio.setText("");
        this.id = 0;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JButton btnregister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaSer;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtServicio;
    // End of variables declaration//GEN-END:variables
}
