/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import dao.VeterinarioDao;
import dao.impl.VeterinarioDaoImpl;
import java.awt.Image;
import java.io.IOException;
import java.nio.file.Files;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import modelo.Veterinario;

/**
 *
 * @author Miguel Casa
 */
public class Veterinarios extends javax.swing.JInternalFrame {

    Veterinario veterinario = new Veterinario();
    VeterinarioDao veterinarioDAO = new VeterinarioDaoImpl();
    DefaultTableModel modeloTable =  new DefaultTableModel();
    Map<Integer, byte[]> imagenMap = new HashMap<>();
    int id = 0;
    byte[] imageBytes = null;
    /**
     * Creates new form Veterinario
     */
    public Veterinarios() {
        initComponents();
        this.listarVeterinario();
        this.buscarcliente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        txtapellido = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtedad = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        btnImagen = new javax.swing.JButton();
        btnlimpiar = new javax.swing.JButton();
        btnregister = new javax.swing.JButton();
        btneliminar = new javax.swing.JButton();
        btnmodificar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaVet = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtbuscador = new javax.swing.JTextField();
        lblFoto = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("CRUD VETERINARIOS");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        txtId.setEditable(false);
        txtId.setEnabled(false);
        jPanel1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 50, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Nombre: ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
        jPanel1.add(txtnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 140, -1));
        jPanel1.add(txtapellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 140, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Apellido:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Edad:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));
        jPanel1.add(txtedad, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 140, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("DNI:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));
        jPanel1.add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 140, -1));

        btnImagen.setText("ELEGIR IMAGEN");
        btnImagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagenActionPerformed(evt);
            }
        });
        jPanel1.add(btnImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 220, -1));

        btnlimpiar.setText("LIMPIAR");
        btnlimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnlimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 440, 80, -1));

        btnregister.setText("GUARDAR");
        btnregister.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnregister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnregisterActionPerformed(evt);
            }
        });
        jPanel1.add(btnregister, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 90, -1));

        btneliminar.setText("ELIMINAR");
        btneliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btneliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btneliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, -1, -1));

        btnmodificar.setText("MODIFICAR");
        btnmodificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmodificarActionPerformed(evt);
            }
        });
        jPanel1.add(btnmodificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tablaVet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMBRE", "APELLIDO", "EDAD", "DNI"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaVet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaVetMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaVet);
        if (tablaVet.getColumnModel().getColumnCount() > 0) {
            tablaVet.getColumnModel().getColumn(0).setResizable(false);
            tablaVet.getColumnModel().getColumn(1).setResizable(false);
            tablaVet.getColumnModel().getColumn(2).setResizable(false);
            tablaVet.getColumnModel().getColumn(3).setResizable(false);
            tablaVet.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Buscador");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 636, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtbuscador, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(21, 21, 21))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtbuscador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(lblFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private  void listarVeterinario(){
            List<Veterinario> listarVeterinario = veterinarioDAO.listarVeterinario();
            modeloTable = (DefaultTableModel)tablaVet.getModel();
            Object[] object = new Object[7];
            int i = 0;
            
            for(Veterinario vet :listarVeterinario){
                object[0]= vet.getId();
                object[1]= vet.getNombre();
                object[2]= vet.getApellido();
                object[3]= vet.getEdad();
                object[4]= vet.getDni();
                object[5]= vet.getImagen();
                modeloTable.addRow(object);
                
                imagenMap.put(i, vet.getImagen());
                i++;
            }
            tablaVet.setModel(modeloTable);
            tablaVet.revalidate();
    }
    
    private void tablaVetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaVetMouseClicked
        // TODO add your handling code here:
        int fila = tablaVet.rowAtPoint(evt.getPoint());
        String id = tablaVet.getValueAt(fila, 0).toString();
        String nombre = tablaVet.getValueAt(fila, 1).toString();
        String apellido = tablaVet.getValueAt(fila, 2).toString();
        String edad = tablaVet.getValueAt(fila, 3).toString();
        String dni = tablaVet.getValueAt(fila,4).toString();

        this.id = Integer.parseInt(id);
        txtId.setText(Integer.toString(this.id));
        txtnombre.setText(nombre);
        txtapellido.setText(apellido);
        txtedad.setText(edad);
        txtDni.setText(dni);
        
        this.imageBytes = imagenMap.get(fila);
        
        if(imageBytes != null){
            // Mostrar la imagen en el JLabel
            ImageIcon imageIcon = new ImageIcon(imageBytes);
            Image image = imageIcon.getImage().getScaledInstance(lblFoto.getWidth(), lblFoto.getHeight(), Image.SCALE_SMOOTH);
            lblFoto.setIcon(new ImageIcon(image));
        }else {
            lblFoto.setIcon(null);
        }
    }//GEN-LAST:event_tablaVetMouseClicked

    private void btnImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagenActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        
        javax.swing.filechooser.FileNameExtensionFilter filter = new javax.swing.filechooser.FileNameExtensionFilter("Imágenes", "jpg", "png");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(null);

        if (result == javax.swing.JFileChooser.APPROVE_OPTION) {
            
            java.io.File selectedFile = fileChooser.getSelectedFile();
            
            String filePath = selectedFile.getAbsolutePath();
            
            javax.swing.ImageIcon imageIcon = new javax.swing.ImageIcon(filePath);
            
            java.awt.Image image = imageIcon.getImage().getScaledInstance(lblFoto.getWidth(), lblFoto.getHeight(), java.awt.Image.SCALE_SMOOTH);
            lblFoto.setIcon(new javax.swing.ImageIcon(image));
            
            try {
                this.imageBytes = Files.readAllBytes(selectedFile.toPath());
                
            } catch (IOException ex) {
                Logger.getLogger(Veterinarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnImagenActionPerformed

    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        this.limpiarCajas();
    }//GEN-LAST:event_btnlimpiarActionPerformed

    private void btnregisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnregisterActionPerformed
        // TODO add your handling code here:
        if(this.id == 0){
            if (!"".equals(txtnombre.getText())  && !"".equals(txtapellido.getText())  && !"". equals(txtedad.getText())
                && !"".equals(txtDni.getText())){
                
                if(txtDni.getText().length()==8){
                    veterinario.setNombre(txtnombre.getText());
                    veterinario.setApellido(txtapellido.getText());
                    veterinario.setEdad(Integer.parseInt(txtedad.getText()));
                    veterinario.setDni(txtDni.getText());
                    veterinario.setImagen(this.imageBytes);

                    if(this.verificarDNI()){
                        if( veterinarioDAO.registrarVeterinario(veterinario)){
                            this.limpiarCajas();
                            this.limpiarTabla();
                            this.listarVeterinario();
                            JOptionPane.showMessageDialog(this, "Se registro correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);

                        }else {
                            JOptionPane.showMessageDialog(this, "Error al registrar Veterinario", "ERROR",JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "DNI invalido (Cantidad de caracteres invalido)", "ERROR",JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Faltan datos a llenar", "Datos faltantes",JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(this, "Tiene un veterinario seleccionado, para registrar uno nuevo limpie las cajas", "Veterinario seleccionado",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnregisterActionPerformed

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneliminarActionPerformed
        // TODO add your handling code here:
        if(this.id != 0){
            int option = JOptionPane.showConfirmDialog(null, "¿Estás seguro de que deseas eliminar el registro incluyendo el usuario registrado?", "Confirmación", JOptionPane.YES_NO_OPTION);
            if (option ==  JOptionPane.YES_OPTION){
                if( veterinarioDAO.vaciarUsuarioVet(this.id) && veterinarioDAO.eleminarVeterinario(this.id)){
                    JOptionPane.showMessageDialog(this, "Se elimino correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);
                    this.id = 0;
                    this.limpiarCajas();
                    this.limpiarTabla();
                    this.listarVeterinario();
                }else {
                    JOptionPane.showMessageDialog(this, "Error al eliminar Veterinario   ", "ERROR",JOptionPane.ERROR_MESSAGE);

                }
            } else{
                this.limpiarCajas();
            }
        }else {
            JOptionPane.showMessageDialog(this, "No hay veterinario seleccionado", "Seleccione de la tabla",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btneliminarActionPerformed

    private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmodificarActionPerformed
        // TODO add your handling code here:
        if(this.id != 0){
            if (!"".equals(txtnombre.getText())  && !"".equals(txtapellido.getText())  && !"". equals(txtedad.getText())
                && !"".equals(txtDni.getText())){

                if(txtDni.getText().length()==8){
                    veterinario.setNombre(txtnombre.getText());
                    veterinario.setApellido(txtapellido.getText());
                    veterinario.setEdad(Integer.parseInt(txtedad.getText()));
                    veterinario.setDni(txtDni.getText());
                    veterinario.setImagen(this.imageBytes);
                    veterinario.setId(id);

                    if( veterinarioDAO.modificarVeterinario(veterinario)){
                        this.limpiarCajas();
                        this.limpiarTabla();
                        this.listarVeterinario();

                        JOptionPane.showMessageDialog(this, "Se edito correctamente ", "OK",JOptionPane.INFORMATION_MESSAGE);

                    }else {
                        JOptionPane.showMessageDialog(this, "Error al editar Veterinario   ", "ERROR",JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "DNI invalido (Cantidad de caracteres invalido)", "ERROR",JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Faltan datos a llenar", "Datos faltantes",JOptionPane.ERROR_MESSAGE);
            }
        }else {
            JOptionPane.showMessageDialog(this, "No hay veterinario seleccionado", "Seleccione de la tabla",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnmodificarActionPerformed

    private boolean verificarDNI(){
        int rowCount = tablaVet.getRowCount();
    
        for (int i = 0; i < rowCount; i++) {
            Object value = tablaVet.getValueAt(i, 4);

            if (txtDni.getText().equals(value)) {
                JOptionPane.showMessageDialog(this, "DNI ya registrado", "DNI Existente",JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }

        return true;
    }
    
    private void limpiarTabla(){
            modeloTable = (DefaultTableModel) tablaVet.getModel();
            modeloTable.setRowCount(0);
            tablaVet.revalidate();
    }
    
    private void limpiarCajas(){
        
        int selectedRow = tablaVet.getSelectedRow();

        if (selectedRow != -1) {
            tablaVet.clearSelection();
        }
        
        lblFoto.setIcon(null);
        txtId.setText("");
        txtnombre.setText("");
        txtapellido.setText("");
        txtedad.setText("");
        txtDni.setText("");
        this.id = 0;
        imageBytes = null;
    }
    
    public void iniciarbusqueda(){
        if (!"".equals(txtbuscador.getText())){
            this.limpiarTabla();
            List<Veterinario> listarVeterinario = veterinarioDAO.buscarVeterinario(txtbuscador.getText());
            modeloTable = (DefaultTableModel)tablaVet.getModel();
            Object[] object = new Object[6];

            for(Veterinario vet :listarVeterinario){
                object[0]= vet.getId();
                object[1]= vet.getNombre();
                object[2]= vet.getApellido();
                object[3]= vet.getEdad();
                object[4]= vet.getDni();
                object[5]= vet.getImagen();
                modeloTable.addRow(object);
            }
            tablaVet.setModel(modeloTable);
            tablaVet.revalidate();
        } else{
            this.limpiarTabla();
            this.listarVeterinario();
        }
    }
    
    private void buscarcliente(){
        txtbuscador.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                iniciarbusqueda();
                System.out.println("Texto insertado: " + txtbuscador.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                iniciarbusqueda();
                System.out.println("Texto eliminado: " + txtbuscador.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImagen;
    private javax.swing.JButton btneliminar;
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JButton btnmodificar;
    private javax.swing.JButton btnregister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTable tablaVet;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtapellido;
    private javax.swing.JTextField txtbuscador;
    private javax.swing.JTextField txtedad;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
